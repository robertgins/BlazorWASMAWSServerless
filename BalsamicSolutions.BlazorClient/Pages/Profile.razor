@page "/profile"
@attribute [Authorize]
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using System.Text.Json
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<section class="profile">
    <AuthorizeView>
        <Authorized>
            <div>
                <h3 class="mb-4">Logon Profile</h3>
                <table>
                    <colgroup>
                        <col span="1" style="width: 200px;">
                        <col span="1">
                    </colgroup>

                    <thead>
                        <tr>
                            <th>Key</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var claim in context.User.Claims)
                        {
                            <tr>
                                <td>@claim.Type</td>
                                <td>@claim.Value</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div>
                <h3 class="mb-4">OIDC</h3>
                <table>
                    <colgroup>
                        <col span="1" style="width: 200px;">
                        <col span="1">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>Property</th>
                            <th>Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>id_token</td>
                            <td>@CogUser.id_token</td>
                        </tr>
                        <tr>
                            <td>access_token</td>
                            <td>@CogUser.access_token</td>
                        </tr>
                        <tr>
                            <td>refresh_token</td>
                            <td>@CogUser.refresh_token</td>
                        </tr>
                        <tr>
                            <td>token_type</td>
                            <td>@CogUser.token_type</td>
                        </tr>
                        <tr>
                            <td>scope</td>
                            <td>@CogUser.scope</td>
                        </tr>
                        <tr>
                            <td>expires_at</td>
                            <td>@CogUser.expires_at</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </Authorized>
    </AuthorizeView>

</section>


@code {


    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private ClaimsPrincipal AuthenticationStateUser { get; set; }
    private ClaimsPrincipal AuthenticationStateProviderUser { get; set; }
    public CognitoUser CogUser { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        CogUser = new CognitoUser();
        AuthenticationState authenticationState;

        authenticationState = await authenticationStateTask;
        this.AuthenticationStateUser = authenticationState.User;

        authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        this.AuthenticationStateProviderUser = authenticationState.User;
        string key = "Microsoft.AspNetCore.Components.WebAssembly.Authentication.CachedAuthSettings";
        string authSettingsRAW = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", key);
        CachedAuthSettings authSettings = JsonSerializer.Deserialize<CachedAuthSettings>(authSettingsRAW);
        string userRAW = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", authSettings?.OIDCUserKey);
        this.CogUser = JsonSerializer.Deserialize<CognitoUser>(userRAW);
    }


    public class CognitoUser
    {
        public CognitoUser()
        {
            id_token = "NULL";
        }
        public string id_token { get; set; }
        public string access_token { get; set; }
        public string refresh_token { get; set; }
        public string token_type { get; set; }
        public string scope { get; set; }
        public int expires_at { get; set; }
    }

    public class CachedAuthSettings
    {
        public string authority { get; set; }
        public string metadataUrl { get; set; }
        public string client_id { get; set; }
        public string[] defaultScopes { get; set; }
        public string redirect_uri { get; set; }
        public string post_logout_redirect_uri { get; set; }
        public string response_type { get; set; }
        public string response_mode { get; set; }
        public string scope { get; set; }

        public string OIDCUserKey => $"oidc.user:{authority}:{client_id}";
    }
}